Revised simplex method
--------------------------------------------------

Select the type of input:
	1: Manual input
	2: Input from file
Selected: --------------------------------------------------

---- NOTE ----
Enter the relative path to the file, from under "/examples/" 
e.g. For file 1.txt, write "1.txt", that will load "/examples/1.txt"
--------------------------------------------------

---- NOTE ----
The file must be in the following format:
N M				Where N - number of equations and M - number of variables
"min" or "max"			Goal function minimisation or maximisation
c1 c2 c3 ... cM
A11 A12 ... A1M _ b1
A21 A22 ... A2M _ b2
................
AN1 AN2 ... ANM _ bN
  for x1, x2, x3, ... xM >= 0		Where '_' should be '<', '>' or '='

--------------------------------------------------

--------------------------------------------------

--------------------------------------------------

Enter the file name: Solving system(canonical form): Ax = b
c:
 [2. 3. 5. 2. 3. 0. 0.]
A:
 [[-1. -1. -2. -1. -3.  1.  0.]
 [-2.  2. -3. -1. -1.  0.  1.]]
b:
 [-4.0, -3.0]
--------------------------------------------------

Set unit matrix:
c:
 [ 0.    0.    0.75 -0.25 -4.25  2.5  -0.25]
A:
 [[ 1.    0.    1.75  0.75  1.75 -0.5  -0.25]
 [ 0.    1.    0.25  0.25  1.25 -0.5   0.25]]
b:
 [2.75, 1.25]
Base indexes (P):
 [0, 1]
Nonbase indexes (Q):
 [2, 3, 4, 5, 6]
Base function value (Fo):
 -9.25
--------------------------------------------------

Revised Simplex:

Starting x value:  [2.75 1.25 0.   0.   0.   0.   0.  ]
Starting base matrix:
 [[1. 0.]
 [0. 1.]]
--------------------------------------------------

Iteration 0:

--------------------------------------------------

Calculating B:

B = Bo
Step 1: Solving system(1): uB = Cb
B:
 [[1. 0.]
 [0. 1.]]
Cb:
 [0. 0.]
Result of u(1): [0. 0.]
--------------------------------------------------

Step 2: Calculating r (r := C - uK):
C:
 [ 0.75 -0.25 -4.25  2.5  -0.25]
K:
 [[ 1.75  0.75  1.75 -0.5  -0.25]
 [ 0.25  0.25  1.25 -0.5   0.25]]
Result(r):  [ 0.75 -0.25 -4.25  2.5  -0.25]
Bland's rule: first negative r(i) is r1
--------------------------------------------------

Step 3: Solving system(2): By = K1
B:
 [[1. 0.]
 [0. 1.]]
K: 3 
 [[0.75]
 [0.25]]
Result of y(2): [0.75 0.25]
--------------------------------------------------

Step 4: check if y <= 0:

(y <= 0) is not true!

Finding optimal t:

Optimal t: 3.6666666666666665

Column 0 leaves base (P)

--------------------------------------------------

ETA Matrix:
 [[0.75 0.  ]
 [0.25 1.  ]]
--------------------------------------------------

Step 5: updating x:

Old x: [2.75 1.25 0.   0.   0.   0.   0.  ]
New x: [0.    0.333 0.    3.667 0.    0.    0.   ]
--------------------------------------------------

Iteration 1:

--------------------------------------------------

Calculating B:

B = Bo * E1
Step 1: Solving system(1): uB = Cb
B:
 [[0.75 0.  ]
 [0.25 1.  ]]
Cb:
 [-0.25  0.  ]
Result of u(1): [-0.333  0.   ]
--------------------------------------------------

Step 2: Calculating r (r := C - uK):
C:
 [ 0.75  0.   -4.25  2.5  -0.25]
K:
 [[ 1.75  1.    1.75 -0.5  -0.25]
 [ 0.25  0.    1.25 -0.5   0.25]]
Result(r):  [ 1.333  0.333 -3.667  2.333 -0.333]
Bland's rule: first negative r(i) is r2
--------------------------------------------------

Step 3: Solving system(2): By = K2
B:
 [[0.75 0.  ]
 [0.25 1.  ]]
K: 4 
 [[1.75]
 [1.25]]
Result of y(2): [2.333 0.667]
--------------------------------------------------

Step 4: check if y <= 0:

(y <= 0) is not true!

Finding optimal t:

Optimal t: 0.5

Column 1 leaves base (P)

--------------------------------------------------

ETA Matrix:
 [[1.    2.333]
 [0.    0.667]]
--------------------------------------------------

Step 5: updating x:

Old x: [0.    0.333 0.    3.667 0.    0.    0.   ]
New x: [0.  0.  0.  2.5 0.5 0.  0. ]
--------------------------------------------------

Iteration 2:

--------------------------------------------------

Calculating B:

B = Bo * E1 * E2
Step 1: Solving system(1): uB = Cb
B:
 [[0.75 1.75]
 [0.25 1.25]]
Cb:
 [-0.25 -4.25]
Result of u(1): [ 1.5 -5.5]
--------------------------------------------------

Step 2: Calculating r (r := C - uK):
C:
 [ 0.75  0.    0.    2.5  -0.25]
K:
 [[ 1.75  1.    0.   -0.5  -0.25]
 [ 0.25  0.    1.   -0.5   0.25]]
Result(r):  [-0.5 -1.5  5.5  0.5  1.5]
Bland's rule: first negative r(i) is r0
--------------------------------------------------

Step 3: Solving system(2): By = K0
B:
 [[0.75 1.75]
 [0.25 1.25]]
K: 2 
 [[1.75]
 [0.25]]
Result of y(2): [ 3.5 -0.5]
--------------------------------------------------

Step 4: check if y <= 0:

(y <= 0) is not true!

Finding optimal t:

Optimal t: 0.7142857142857144

Column 3 leaves base (P)

--------------------------------------------------

ETA Matrix:
 [[ 3.5  0. ]
 [-0.5  1. ]]
--------------------------------------------------

Step 5: updating x:

Old x: [0.  0.  0.  2.5 0.5 0.  0. ]
New x: [0.    0.    0.714 0.    0.857 0.    0.   ]
--------------------------------------------------

Iteration 3:

--------------------------------------------------

Calculating B:

B = Bo * E1 * E2 * E3
Step 1: Solving system(1): uB = Cb
B:
 [[1.75 1.75]
 [0.25 1.25]]
Cb:
 [ 0.75 -4.25]
Result of u(1): [ 1.143 -5.   ]
--------------------------------------------------

Step 2: Calculating r (r := C - uK):
C:
 [-0.25  0.    0.    2.5  -0.25]
K:
 [[ 0.75  1.    0.   -0.5  -0.25]
 [ 0.25  0.    1.   -0.5   0.25]]
Result(r):  [ 0.143 -1.143  5.     0.571  1.286]
Bland's rule: first negative r(i) is r1
--------------------------------------------------

Step 3: Solving system(2): By = K1
B:
 [[1.75 1.75]
 [0.25 1.25]]
K: 0 
 [[1.]
 [0.]]
Result of y(2): [ 0.714 -0.143]
--------------------------------------------------

Step 4: check if y <= 0:

(y <= 0) is not true!

Finding optimal t:

Optimal t: 1.0

Column 2 leaves base (P)

--------------------------------------------------

ETA Matrix:
 [[ 0.714  0.   ]
 [-0.143  1.   ]]
--------------------------------------------------

Step 5: updating x:

Old x: [0.    0.    0.714 0.    0.857 0.    0.   ]
New x: [1. 0. 0. 0. 1. 0. 0.]
--------------------------------------------------

Iteration 4:

--------------------------------------------------

Calculating B:

B = Bo * E1 * E2 * E3 * E4
Step 1: Solving system(1): uB = Cb
B:
 [[1.   1.75]
 [0.   1.25]]
Cb:
 [ 0.   -4.25]
Result of u(1): [ 0.  -3.4]
--------------------------------------------------

Step 2: Calculating r (r := C - uK):
C:
 [-0.25  0.75  0.    2.5  -0.25]
K:
 [[ 0.75  1.75  0.   -0.5  -0.25]
 [ 0.25  0.25  1.   -0.5   0.25]]
Result(r):  [0.6 1.6 3.4 0.8 0.6]
(r > 0) is true => optimal value is found!
--------------------------------------------------

Solution: [1. 0. 0. 0. 1. 0. 0.]
Optimal value: 5.0

