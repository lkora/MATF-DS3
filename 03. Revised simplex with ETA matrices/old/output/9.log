Revised simplex method
--------------------------------------------------

Select the type of input:
	1: Manual input
	2: Input from file
Selected: --------------------------------------------------

---- NOTE ----
Enter the relative path to the file, from under "/examples/" 
e.g. For file 1.txt, write "1.txt", that will load "/examples/1.txt"
--------------------------------------------------

---- NOTE ----
The file must be in the following format:
N M				Where N - number of equations and M - number of variables
"min" or "max"			Goal function minimisation or maximisation
c1 c2 c3 ... cM
A11 A12 ... A1M _ b1
A21 A22 ... A2M _ b2
................
AN1 AN2 ... ANM _ bN
  for x1, x2, x3, ... xM >= 0		Where '_' should be '<', '>' or '='

--------------------------------------------------

--------------------------------------------------

--------------------------------------------------

Enter the file name: Solving system(canonical form): Ax = b
c:
 [ 2. -3.  1.  0.]
A:
 [[-1. -2.  1.  1.]
 [-1.  3.  4.  0.]]
b:
 [-3.0, 2.0]
--------------------------------------------------

Set unit matrix:
c:
 [0.  0.  7.2 0.6]
A:
 [[ 1.   0.  -2.2 -0.6]
 [ 0.   1.   0.6 -0.2]]
b:
 [1.0, 1.0]
Base indexes (P):
 [0, 1]
Nonbase indexes (Q):
 [2, 3]
Base function value (Fo):
 1.0
--------------------------------------------------

Revised Simplex:

Starting x value:  [1. 1. 0. 0.]
Starting base matrix:
 [[1. 0.]
 [0. 1.]]
--------------------------------------------------

Iteration 0:

--------------------------------------------------

Calculating B:

B = Bo
Step 1: Solving system(1): uB = Cb
B:
 [[1. 0.]
 [0. 1.]]
Cb:
 [0. 0.]
Result of u(1): [0. 0.]
--------------------------------------------------

Step 2: Calculating r (r := C - uK):
C:
 [7.2 0.6]
K:
 [[-2.2 -0.6]
 [ 0.6 -0.2]]
Result(r):  [7.2 0.6]
(r > 0) is true => optimal value is found!
--------------------------------------------------

Solution: [1. 1. 0. 0.]
Optimal value: -1.0

