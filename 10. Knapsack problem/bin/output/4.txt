Select the type of input:
	1: Manual input
	2: Input from file
Selected: 2

--------------------------------------------------

---- NOTE ----
Enter the relative path to the file, from under "/examples/" 
e.g. For file 1.txt, write "1.txt", that will load "/examples/1.txt"

--------------------------------------------------

---- NOTE ----
The input must be in the following format:
M				Where M - number of variables
"max"			Objective function maximisation
c1 c2 c3 ... cM
a1 a2 a3 a4 ... aM _ b
  for x1, x2, x3, ... xM >= 0		Where '_' should be '<=', '>=' or '='
'0/1' or 'Z'		For xi in set [0, 1], or for xi in set Z
'forward' or 'backward'		Recursive formula

--------------------------------------------------


--------------------------------------------------

Enter the file name: 4.txt
Loaded the problem:

max [3. 4. 5. 2.]
    [2 3 4 5] <= 9
 for xi in set Z



Solving knapsack BACKWARDS:


F4(9) = max[ 0.0 + F3(9) , 2.0 + F3(4) ,]

F3(9) = max[ 0.0 + F2(9) , 5.0 + F2(5) , 10.0 + F2(1) ,]

F2(9) = max[ 0.0 + F1(9) , 4.0 + F1(6) , 8.0 + F1(3) , 12.0 + F1(0) ,]

F1(9) = 12.0
F1(6) = 9.0
F1(3) = 3.0
F1(0) = 0.0
F2(5) = max[ 0.0 + F1(5) , 4.0 + F1(2) ,]

F1(5) = 6.0
F1(2) = 3.0
F2(1) = max[ 0.0 + F1(1) ,]

F1(1) = 0.0
F3(4) = max[ 0.0 + F2(4) , 5.0 + F2(0) ,]

F2(4) = max[ 0.0 + F1(4) , 4.0 + F1(1) ,]

F1(4) = 6.0
F1(1) = 0.0
F2(0) = max[ 0.0 + F1(0) ,]

F1(0) = 0.0

After calculating memoization:

  K\Y   |   0    |   1    |   2    |   3    |   4    |   5    |   6    |   7    |   8    |   9    |
---------------------------------------------------------------------------------------------------
   1    |  0.0   |  0.0   |  3.0   |  3.0   |  6.0   |  6.0   |  9.0   |  9.0   |  12.0  |  12.0  |
---------------------------------------------------------------------------------------------------
   2    |  0.0   |  0.0   |  -inf  |  -inf  |  6.0   |  7.0   |  -inf  |  -inf  |  -inf  |  13.0  |
---------------------------------------------------------------------------------------------------
   3    |  -inf  |  -inf  |  -inf  |  -inf  |  6.0   |  -inf  |  -inf  |  -inf  |  -inf  |  13.0  |
---------------------------------------------------------------------------------------------------
   4    |  -inf  |  -inf  |  -inf  |  -inf  |  -inf  |  -inf  |  -inf  |  -inf  |  -inf  |  13.0  |
---------------------------------------------------------------------------------------------------
[13.0, 8.0]
0
[13.0, 12.0, 10.0]
0
[12.0, 13.0, 11.0, 12.0]
1
[6.0, 7.0, 8.0, 9.0]
3
[-inf]
0

Optimal arrangement is: [3, 1, 0, 0]
Optimal value is: 13.0 
--------------------------------------------------

